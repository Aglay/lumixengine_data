error todo attributes
{
	"attributes" : ["in_position", "in_normal", "in_tex_coords", "bone_weights", "bone_indices"],
	"shadowmap_required" : true
}

//BEGIN

#version 330

in vec3 in_position;
in vec3 in_normal;
in vec4 bone_weights;
in vec4 bone_indices;
in vec2 in_tex_coords;

out vec3 normals;
out vec4 position;
out vec2 tex_coords;

uniform mat4 world_matrix;
uniform mat4 view_matrix;
uniform mat4 projection_matrix;
uniform mat4 bone_matrices[64];

void main( void )
{
	vec4 p = vec4(in_position, 1);
	tex_coords	= in_tex_coords;
	normals		= normalize(mat3(world_matrix) * in_normal);
	
	position = bone_weights.x * (bone_matrices[int(bone_indices.x)] * p);
	position = position + bone_weights.y * (bone_matrices[int(bone_indices.y)] * p);
	position = position + bone_weights.z * (bone_matrices[int(bone_indices.z)] * p);
	position = position + bone_weights.w * (bone_matrices[int(bone_indices.w)] * p);
	//position = (bone_matrices[int(bone_indices.x)] * p);
	//position = p;
	gl_Position = projection_matrix * view_matrix * world_matrix * position; 
    
	gl_FrontColor = vec4(1.0, 1.0, 1.0, 1.0);
}

//~VS
#version 330

in vec4		position;
in vec3		normals;

uniform sampler2D	tDiffuse;
uniform sampler2D	shadowmap;
uniform mat4 shadowmap_matrix0;
uniform mat4 shadowmap_matrix1;
uniform mat4 shadowmap_matrix2;
uniform mat4 shadowmap_matrix3;
uniform mat4 world_matrix;
uniform vec3 light_dir;

vec2 poissonDisk[4] = vec2[](
  vec2( -0.94201624, -0.39906216 ),
  vec2( 0.94558609, -0.76890725 ),
  vec2( -0.094184101, -0.92938870 ),
  vec2( 0.34495938, 0.29387760 )
);

void main( void )
{
	float visibility = 1.0;
	vec3 shadow_coord[4] = vec3[](
		vec3(shadowmap_matrix0 * world_matrix * position),
		vec3(shadowmap_matrix1 * world_matrix * position),
		vec3(shadowmap_matrix2 * world_matrix * position),
		vec3(shadowmap_matrix3 * world_matrix * position)
	);
	vec2 tt[4] = vec2[](
		vec2(shadow_coord[0].x, shadow_coord[0].y * 0.25),
		vec2(shadow_coord[1].x, 0.25 + shadow_coord[1].y * 0.25),
		vec2(shadow_coord[2].x, 0.50 + shadow_coord[2].y * 0.25),
		vec2(shadow_coord[3].x, 0.75 + shadow_coord[3].y * 0.25)
	);
	float near = 0.1;
	float far = 1000.0;
	float depth = gl_FragCoord.z;
	float linear_depth = (far - near) * (2.0 * near) / (far + near - depth * (far - near));
	int split_index = 0;
	if(shadow_coord[3].x < 0.99 && shadow_coord[3].x > 0.01
		&& shadow_coord[3].y < 0.99 && shadow_coord[3].y > 0.01)
		split_index = 3;
	if(shadow_coord[2].x < 0.99 && shadow_coord[2].x > 0.01
		&& shadow_coord[2].y < 0.99 && shadow_coord[2].y > 0.01)
		split_index = 2;
	if(shadow_coord[1].x < 0.99 && shadow_coord[1].x > 0.01
		&& shadow_coord[1].y < 0.99 && shadow_coord[1].y > 0.01)
		split_index = 1;
	if(shadow_coord[0].x < 0.99 && shadow_coord[0].x > 0.01
		&& shadow_coord[0].y < 0.99 && shadow_coord[0].y > 0.01)
		split_index = 0;
	
/*	for (int i=0;i<4;i++)
	{
		if(texture2D(shadowmap, tt[split_index] + poissonDisk[i]/700.0).z < shadow_coord[split_index].z)
			visibility -= 0.2;
	}*/
	if(texture2D(shadowmap, tt[split_index]).z < shadow_coord[split_index].z)
		visibility -= 0.5;
	visibility = max(0.2, visibility * max(0.2, dot(normals, -light_dir)));
	vec4 colors[4] = vec4[](
		vec4(1, 0, 0, 1),
		vec4(0, 1, 0, 1),
		vec4(0, 0, 1, 1),
		vec4(1, 1, 0, 1)
	);
	//vec4 texel = colors[split_index]; 
	vec4 texel = texture2D(tDiffuse, tex_coords).rgba;
	/*texel = (
		vec4(texture2D(shadowmap, tt[0]).x, 0, 0, 1) 
		//+ vec4(0, texture2D(shadowmap, tt[1]).x, 0, 1)
		//+ vec4(0, 0, texture2D(shadowmap, tt[2]).x, 1) 
		//+ vec4(texture2D(shadowmap, tt[3]).x, 1, 0, 1)
	) * 1;/**/
	//visibility = 1;
	if(texel.a < 0.30)
		discard;
	gl_FragColor = texel * visibility;
	//gl_FragColor = vec4(1, 0, 0, 1);
}
