{
	"passes" : ["MAIN"],
	"attributes" : ["in_position", "in_normal", "in_tex_coords"],
	"shadowmap_required" : true
}
//BEGIN

#ifdef VERTEX_SHADER

in vec3 in_position;

out vec3 tex_coords;

uniform mat4 world_matrix;
uniform mat4 view_matrix;
uniform mat4 projection_matrix;

void main( void )
{
	mat4 world_matrix_rotation = world_matrix;
	world_matrix_rotation[3] = vec4(0, 0, 0, 1);
	vec4 p = world_matrix_rotation * vec4(in_position, 1);
	tex_coords = vec3(p.x, -p.y, -p.z);

	mat4 mtx = view_matrix;
	mtx[3] = vec4(0, 0, 0, 1);
	vec4 tmp = projection_matrix * mtx * vec4(in_position, 1);
	gl_Position = vec4(tmp.xyw, tmp.w);
	gl_FrontColor = vec4(1.0, 1.0, 1.0, 1.0);
}

#endif

#ifdef FRAGMENT_SHADER

in vec3 tex_coords;

out vec4			out_color;

uniform samplerCube tDiffuse;

void main( void )
{
	vec4 texel = texture(tDiffuse, tex_coords).rgba;
	out_color = texel;
	//gl_FragColor = vec4(1, 0, 0, 1);
}

#endif